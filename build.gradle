plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.5.10'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'
    implementation 'com.amazonaws:aws-lambda-java-events:3.11.0'
    runtimeOnly 'com.amazonaws:aws-lambda-java-log4j2:1.5.1'

    // logging
    implementation 'org.apache.logging.log4j:log4j-core:2.17.1'
    implementation 'org.apache.logging.log4j:log4j-api:2.17.1'
    // see https://logging.apache.org/log4j/2.x/log4j-slf4j-impl/
    // runtimeOnly 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.1'
    runtimeOnly 'org.apache.logging.log4j:log4j-slf4j18-impl:2.17.1'
    implementation 'org.slf4j:slf4j-api:1.7.35'

    // for lambda
    implementation 'joda-time:joda-time:2.10.13'

    testImplementation('com.amazonaws:aws-lambda-java-tests:1.1.1')
    testImplementation('org.apache.maven.plugins:maven-surefire-plugin:2.22.2')

    testImplementation(platform('org.junit:junit-bom:5.8.2'))
    testImplementation('org.junit.jupiter:junit-jupiter')
}

project.version = "1.0.0"
shadowJar {
    archiveFileName.set("${project.name}-${project.version}.jar")
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer)
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}